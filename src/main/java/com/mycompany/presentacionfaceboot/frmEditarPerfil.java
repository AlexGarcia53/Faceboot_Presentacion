/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.presentacionfaceboot;

import dominio.Sexo;
import dominio.Usuario;
import excepciones.ErrorDatosErroneosException;
import excepciones.ErrorEditarUsuarioException;
import interfaces.IProxy;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 * Formulario para editar el perfil de un usuario.
 *
 * @author Equipo broker
 */
public class frmEditarPerfil extends javax.swing.JFrame {

    /**
     * Usuario que abre el formulario.
     */
    private Usuario usuario;
    /**
     * Instancia del proxy que utiliza el cliente.
     */
    private IProxy proxy;

    /**
     * Constructor que inicializa los atributos de la clase.
     *
     * @param usuario Usuario que abre el formulario.
     * @param proxy Instancia del proxy que utiliza el cliente.
     */
    public frmEditarPerfil(Usuario usuario, IProxy proxy) {
        initComponents();
        this.usuario = usuario;
        this.proxy = proxy;
        this.llenarComboBoxSexo();
        this.llenarCampos();
    }

    /**
     * Método utilizado para llenar el combobox de sexos.
     */
    public void llenarComboBoxSexo() {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) this.comboBoxSexo.getModel();
        modelo.addElement(Sexo.MASCULINO);
        modelo.addElement(Sexo.FEMENINO);
        this.comboBoxSexo.setSelectedIndex(0);
    }

    /**
     * Método utilizado para llenar los campos del formulario.
     */
    public void llenarCampos() {
        this.txtUsuario.setText(this.usuario.getUsuario());
        if (this.usuario.getContrasenia() != null) {
            this.txtContrasena.setText(this.usuario.getContrasenia());
        }
        if (this.usuario.getSexo() != null) {
            this.comboBoxSexo.setSelectedItem(this.usuario.getSexo());
        }
        if (this.usuario.getFechaNacimiento() != null) {
            this.fechaNacimiento.setDate(LocalDate.of(this.usuario.getFechaNacimiento().get(Calendar.YEAR), (this.usuario.getFechaNacimiento().get(Calendar.MONTH) + 1), this.usuario.getFechaNacimiento().get(Calendar.DAY_OF_MONTH)));
        }
    }

    /**
     * Método utilizado para mostrar las respuestas del servidor.
     *
     * @param mensaje mensaje a mostrar.
     */
    private void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Respuesta del servidor", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * Método utilizado para cerrar el formulario actual.
     *
     * @param usuario usuario
     * @param proxy Instancia del proxy que utiliza el cliente.
     */
    public void cerrarVentana(Usuario usuario, IProxy proxy) {
        FrmMuro muro = new FrmMuro(usuario, proxy);
        muro.setVisible(true);
        this.dispose();
    }

    /**
     * Método que verfica los campos que tiene el formulario.
     *
     * @throws ErrorDatosErroneosException Excepción utilizada para especificar
     * errores en inserción de datos.
     */
    private void verificarCampos() throws ErrorDatosErroneosException {
        if (this.txtUsuario.getText().isEmpty()) {
            throw new ErrorDatosErroneosException("El usuario esta vacío");
        } else if (this.txtContrasena.getText().isEmpty()) {
            throw new ErrorDatosErroneosException("La contraseña esta vacía");
        } else if (this.fechaNacimiento.getText().isEmpty()) {
            throw new ErrorDatosErroneosException("La fecha de nacimiento esta vacía");
        }
    }

    /**
     * Método utilizado para mostrar mensajes de error.
     *
     * @param error error específico.
     */
    private void mostrarError(String error) {
        JOptionPane.showMessageDialog(this, error, "Error!...", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JTextField();
        comboBoxSexo = new javax.swing.JComboBox<>();
        fechaNacimiento = new com.github.lgooddatepicker.components.DatePicker();
        btnGuardarCambios = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Faceboot - Editar Perfil");
        setResizable(false);

        fondo.setBackground(new java.awt.Color(255, 217, 183));
        fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Fecha de nacimiento");
        jLabel1.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        fondo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 250, 30));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 25)); // NOI18N
        jLabel2.setText("Editar perfil");
        fondo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 250, 30));

        jLabel3.setText("Usuario");
        jLabel3.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        fondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 250, 30));

        jLabel5.setText("Contraseña");
        jLabel5.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        fondo.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 250, 30));

        jLabel7.setText("Sexo");
        jLabel7.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        fondo.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 250, 30));
        fondo.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 340, 30));
        fondo.add(txtContrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 340, 30));

        fondo.add(comboBoxSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 340, 30));
        fondo.add(fechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 340, 30));

        btnGuardarCambios.setText("Guardar cambios");
        btnGuardarCambios.setActionCommand("");
        btnGuardarCambios.setBackground(new java.awt.Color(240, 115, 0));
        btnGuardarCambios.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnGuardarCambios.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });
        fondo.add(btnGuardarCambios, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 430, 140, 40));

        btnCancelar.setText("Cancelar");
        btnCancelar.setBackground(new java.awt.Color(102, 102, 102));
        btnCancelar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        fondo.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 140, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Botón que guarda los cambios realizados.
     *
     * @param evt evento.
     */
    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        try {
            this.verificarCampos();
        } catch (ErrorDatosErroneosException ex) {
            this.mostrarError(ex.getMessage());
            return;
        }

        Usuario nuevo = this.usuario;
        nuevo.setUsuario(this.txtUsuario.getText());
        nuevo.setContrasenia(this.txtContrasena.getText());
        nuevo.setSexo((Sexo) this.comboBoxSexo.getSelectedItem());
        LocalDate fechaTemporal = this.fechaNacimiento.getDate();
        GregorianCalendar fechaNacimiento = new GregorianCalendar(fechaTemporal.getYear(), (fechaTemporal.getMonthValue() - 1), fechaTemporal.getDayOfMonth(), 0, 0, 0);
        nuevo.setFechaNacimiento(fechaNacimiento);

        try {
            Usuario respuesta = this.proxy.editarPerfilUsuario(nuevo);
            this.mostrarMensaje("Se editó correctamente el usuario");
            this.cerrarVentana(respuesta, this.proxy);
        } catch (ErrorEditarUsuarioException e) {
            this.mostrarMensaje(e.getMessage());
        }

    }//GEN-LAST:event_btnGuardarCambiosActionPerformed
    /**
     * Botón de cancelar.
     *
     * @param evt evento.
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.cerrarVentana(this.usuario, this.proxy);
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JComboBox<String> comboBoxSexo;
    private com.github.lgooddatepicker.components.DatePicker fechaNacimiento;
    private javax.swing.JPanel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
