/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package utils;

import dominio.*;
import dominio.Comentario;
import excepciones.ErrorDatosErroneosException;
import excepciones.ErrorGuardarComentarioException;
import interfaces.IProxy;
import java.awt.Label;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

/**
 * Clase utilizada para construir la sección de comentar.
 *
 * @author Equipo broker
 */
public class Comentar extends javax.swing.JPanel {

    /**
     * Usuario con el que se construye el componente.
     */
    private Usuario usuario;
    /**
     * Publicación con el que se construye el componente.
     */
    private Publicacion publicacion;
    /**
     * Instancia del proxy que utiliza el cliente.
     */
    private IProxy proxy;

    /**
     * Constructor qur inicializa los componentes y atributos del panel.
     *
     * @param usuario Usuario con el que se construye el componente.
     * @param publicacion Publicación con el que se construye el componente.
     * @param proxy Instancia del proxy que utiliza el cliente.
     */
    public Comentar(Usuario usuario, Publicacion publicacion, IProxy proxy) {
        initComponents();

        this.usuario = usuario;
        this.publicacion = publicacion;
        this.proxy = proxy;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        btnComentar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtpnComentario = new javax.swing.JTextPane();

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(255, 217, 183));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 189, 130)));
        setForeground(new java.awt.Color(255, 217, 183));
        setInheritsPopupMenu(true);

        btnComentar.setBackground(new java.awt.Color(240, 115, 0));
        btnComentar.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnComentar.setForeground(new java.awt.Color(255, 255, 255));
        btnComentar.setText("Comentar");
        btnComentar.setToolTipText("");
        btnComentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComentarActionPerformed(evt);
            }
        });

        txtpnComentario.setBackground(new java.awt.Color(255, 233, 214));
        txtpnComentario.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 233, 214)));
        txtpnComentario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtpnComentario.setForeground(new java.awt.Color(204, 88, 3));
        jScrollPane1.setViewportView(txtpnComentario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnComentar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnComentar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Botón que realiza la operación de registrar comentario.
     *
     * @param evt evento.
     */
    private void btnComentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComentarActionPerformed
        String contenidoComentario = this.txtpnComentario.getText();
        Contenido contenido = new Contenido(contenidoComentario);
        GregorianCalendar fechaActual = new GregorianCalendar();
        Comentario comentario = new Comentario(fechaActual, this.publicacion, this.usuario, contenido);

        try {
            this.verificarCampos();
        } catch (ErrorDatosErroneosException ex) {
            this.mostrarError(ex.getMessage());
            return;
        }

        try {
            Comentario respuesta = this.proxy.registrarComentario(comentario);
            this.mostrarMensaje("Se registró correctamente el comentario");
        } catch (ErrorGuardarComentarioException e) {
            this.mostrarMensaje(e.getMessage());
        }
    }//GEN-LAST:event_btnComentarActionPerformed
    /**
     * Método utilizado para validar los campos del formulario.
     *
     * @throws ErrorDatosErroneosException Excepción lanzada en caso de error en
     * datos.
     */
    private void verificarCampos() throws ErrorDatosErroneosException {
        if (this.txtpnComentario.getText().isEmpty()) {
            throw new ErrorDatosErroneosException("El comentario esta vacío");
        }

    }

    /**
     * Método que muestrar un mensaje de error.
     *
     * @param error error específico.
     */
    private void mostrarError(String error) {
        JOptionPane.showMessageDialog(this, error, "Error!...", JOptionPane.ERROR_MESSAGE);
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    /**
     * Método utilizado para mostrar un mensaje.
     *
     * @param mensaje mensaje a mostrar.
     */
    private void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Respuesta del servidor", JOptionPane.INFORMATION_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComentar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane txtpnComentario;
    // End of variables declaration//GEN-END:variables
}
